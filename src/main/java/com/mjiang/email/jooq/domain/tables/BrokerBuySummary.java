/*
 * This file is generated by jOOQ.
*/
package com.mjiang.email.jooq.domain.tables;


import javax.annotation.Generated;
import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import com.mjiang.email.jooq.domain.Indexes;
import com.mjiang.email.jooq.domain.Keys;
import com.mjiang.email.jooq.domain.Tushare;
import com.mjiang.email.jooq.domain.tables.records.BrokerBuySummaryRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BrokerBuySummary extends TableImpl<BrokerBuySummaryRecord> {

    private static final long serialVersionUID = -1330580319;

    /**
     * The reference instance of <code>tushare.broker_buy_summary</code>
     */
    public static final BrokerBuySummary BROKER_BUY_SUMMARY = new BrokerBuySummary();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BrokerBuySummaryRecord> getRecordType() {
        return BrokerBuySummaryRecord.class;
    }

    /**
     * The column <code>tushare.broker_buy_summary.id</code>.
     */
    public final TableField<BrokerBuySummaryRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>tushare.broker_buy_summary.broker_code</code>.
     */
    public final TableField<BrokerBuySummaryRecord, String> BROKER_CODE = createField("broker_code", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>tushare.broker_buy_summary.broker_name</code>.
     */
    public final TableField<BrokerBuySummaryRecord, String> BROKER_NAME = createField("broker_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>tushare.broker_buy_summary.s_money</code>.
     */
    public final TableField<BrokerBuySummaryRecord, BigDecimal> S_MONEY = createField("s_money", org.jooq.impl.SQLDataType.DECIMAL(30, 4), this, "");

    /**
     * The column <code>tushare.broker_buy_summary.b_money</code>.
     */
    public final TableField<BrokerBuySummaryRecord, BigDecimal> B_MONEY = createField("b_money", org.jooq.impl.SQLDataType.DECIMAL(30, 2), this, "");

    /**
     * The column <code>tushare.broker_buy_summary.jm_money</code>.
     */
    public final TableField<BrokerBuySummaryRecord, BigDecimal> JM_MONEY = createField("jm_money", org.jooq.impl.SQLDataType.DECIMAL(30, 2), this, "");

    /**
     * The column <code>tushare.broker_buy_summary.b_count</code>.
     */
    public final TableField<BrokerBuySummaryRecord, Long> B_COUNT = createField("b_count", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>tushare.broker_buy_summary.s_Count</code>.
     */
    public final TableField<BrokerBuySummaryRecord, Long> S_COUNT = createField("s_Count", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>tushare.broker_buy_summary.ts_date</code>.
     */
    public final TableField<BrokerBuySummaryRecord, Date> TS_DATE = createField("ts_date", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * Create a <code>tushare.broker_buy_summary</code> table reference
     */
    public BrokerBuySummary() {
        this(DSL.name("broker_buy_summary"), null);
    }

    /**
     * Create an aliased <code>tushare.broker_buy_summary</code> table reference
     */
    public BrokerBuySummary(String alias) {
        this(DSL.name(alias), BROKER_BUY_SUMMARY);
    }

    /**
     * Create an aliased <code>tushare.broker_buy_summary</code> table reference
     */
    public BrokerBuySummary(Name alias) {
        this(alias, BROKER_BUY_SUMMARY);
    }

    private BrokerBuySummary(Name alias, Table<BrokerBuySummaryRecord> aliased) {
        this(alias, aliased, null);
    }

    private BrokerBuySummary(Name alias, Table<BrokerBuySummaryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Tushare.TUSHARE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BROKER_BUY_SUMMARY_BROKER_BUY_SUMMARY_UNI_INDEX, Indexes.BROKER_BUY_SUMMARY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BrokerBuySummaryRecord, Long> getIdentity() {
        return Keys.IDENTITY_BROKER_BUY_SUMMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BrokerBuySummaryRecord> getPrimaryKey() {
        return Keys.KEY_BROKER_BUY_SUMMARY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BrokerBuySummaryRecord>> getKeys() {
        return Arrays.<UniqueKey<BrokerBuySummaryRecord>>asList(Keys.KEY_BROKER_BUY_SUMMARY_PRIMARY, Keys.KEY_BROKER_BUY_SUMMARY_BROKER_BUY_SUMMARY_UNI_INDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BrokerBuySummary as(String alias) {
        return new BrokerBuySummary(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BrokerBuySummary as(Name alias) {
        return new BrokerBuySummary(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BrokerBuySummary rename(String name) {
        return new BrokerBuySummary(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BrokerBuySummary rename(Name name) {
        return new BrokerBuySummary(name, null);
    }
}
