/*
 * This file is generated by jOOQ.
*/
package com.mjiang.email.jooq.domain.tables;


import com.mjiang.email.jooq.domain.Indexes;
import com.mjiang.email.jooq.domain.Keys;
import com.mjiang.email.jooq.domain.Tushare;
import com.mjiang.email.jooq.domain.tables.records.PublicHolidayRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PublicHoliday extends TableImpl<PublicHolidayRecord> {

    private static final long serialVersionUID = 368459620;

    /**
     * The reference instance of <code>tushare.public_holiday</code>
     */
    public static final PublicHoliday PUBLIC_HOLIDAY = new PublicHoliday();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PublicHolidayRecord> getRecordType() {
        return PublicHolidayRecord.class;
    }

    /**
     * The column <code>tushare.public_holiday.id</code>.
     */
    public final TableField<PublicHolidayRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>tushare.public_holiday.ts_date</code>.
     */
    public final TableField<PublicHolidayRecord, Date> TS_DATE = createField("ts_date", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>tushare.public_holiday.is_public_holiday</code>.
     */
    public final TableField<PublicHolidayRecord, Byte> IS_PUBLIC_HOLIDAY = createField("is_public_holiday", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>tushare.public_holiday.name</code>.
     */
    public final TableField<PublicHolidayRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>tushare.public_holiday.description</code>.
     */
    public final TableField<PublicHolidayRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>tushare.public_holiday.create_ts</code>.
     */
    public final TableField<PublicHolidayRecord, Timestamp> CREATE_TS = createField("create_ts", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>tushare.public_holiday</code> table reference
     */
    public PublicHoliday() {
        this(DSL.name("public_holiday"), null);
    }

    /**
     * Create an aliased <code>tushare.public_holiday</code> table reference
     */
    public PublicHoliday(String alias) {
        this(DSL.name(alias), PUBLIC_HOLIDAY);
    }

    /**
     * Create an aliased <code>tushare.public_holiday</code> table reference
     */
    public PublicHoliday(Name alias) {
        this(alias, PUBLIC_HOLIDAY);
    }

    private PublicHoliday(Name alias, Table<PublicHolidayRecord> aliased) {
        this(alias, aliased, null);
    }

    private PublicHoliday(Name alias, Table<PublicHolidayRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Tushare.TUSHARE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PUBLIC_HOLIDAY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PublicHolidayRecord, Long> getIdentity() {
        return Keys.IDENTITY_PUBLIC_HOLIDAY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PublicHolidayRecord> getPrimaryKey() {
        return Keys.KEY_PUBLIC_HOLIDAY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PublicHolidayRecord>> getKeys() {
        return Arrays.<UniqueKey<PublicHolidayRecord>>asList(Keys.KEY_PUBLIC_HOLIDAY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PublicHoliday as(String alias) {
        return new PublicHoliday(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PublicHoliday as(Name alias) {
        return new PublicHoliday(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PublicHoliday rename(String name) {
        return new PublicHoliday(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PublicHoliday rename(Name name) {
        return new PublicHoliday(name, null);
    }
}
