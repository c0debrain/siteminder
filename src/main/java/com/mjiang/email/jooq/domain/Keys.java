/*
 * This file is generated by jOOQ.
*/
package com.mjiang.email.jooq.domain;


import com.mjiang.email.jooq.domain.tables.BrokerBuyStockInfo;
import com.mjiang.email.jooq.domain.tables.BrokerBuySummary;
import com.mjiang.email.jooq.domain.tables.DragonTigerStock;
import com.mjiang.email.jooq.domain.tables.records.BrokerBuyStockInfoRecord;
import com.mjiang.email.jooq.domain.tables.records.BrokerBuySummaryRecord;
import com.mjiang.email.jooq.domain.tables.records.DragonTigerStockRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>tushare</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<BrokerBuyStockInfoRecord, Long> IDENTITY_BROKER_BUY_STOCK_INFO = Identities0.IDENTITY_BROKER_BUY_STOCK_INFO;
    public static final Identity<BrokerBuySummaryRecord, Long> IDENTITY_BROKER_BUY_SUMMARY = Identities0.IDENTITY_BROKER_BUY_SUMMARY;
    public static final Identity<DragonTigerStockRecord, Long> IDENTITY_DRAGON_TIGER_STOCK = Identities0.IDENTITY_DRAGON_TIGER_STOCK;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BrokerBuyStockInfoRecord> KEY_BROKER_BUY_STOCK_INFO_PRIMARY = UniqueKeys0.KEY_BROKER_BUY_STOCK_INFO_PRIMARY;
    public static final UniqueKey<BrokerBuySummaryRecord> KEY_BROKER_BUY_SUMMARY_PRIMARY = UniqueKeys0.KEY_BROKER_BUY_SUMMARY_PRIMARY;
    public static final UniqueKey<DragonTigerStockRecord> KEY_DRAGON_TIGER_STOCK_PRIMARY = UniqueKeys0.KEY_DRAGON_TIGER_STOCK_PRIMARY;
    public static final UniqueKey<DragonTigerStockRecord> KEY_DRAGON_TIGER_STOCK_UNIQUE_INDEX = UniqueKeys0.KEY_DRAGON_TIGER_STOCK_UNIQUE_INDEX;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<BrokerBuyStockInfoRecord, Long> IDENTITY_BROKER_BUY_STOCK_INFO = Internal.createIdentity(BrokerBuyStockInfo.BROKER_BUY_STOCK_INFO, BrokerBuyStockInfo.BROKER_BUY_STOCK_INFO.ID);
        public static Identity<BrokerBuySummaryRecord, Long> IDENTITY_BROKER_BUY_SUMMARY = Internal.createIdentity(BrokerBuySummary.BROKER_BUY_SUMMARY, BrokerBuySummary.BROKER_BUY_SUMMARY.ID);
        public static Identity<DragonTigerStockRecord, Long> IDENTITY_DRAGON_TIGER_STOCK = Internal.createIdentity(DragonTigerStock.DRAGON_TIGER_STOCK, DragonTigerStock.DRAGON_TIGER_STOCK.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<BrokerBuyStockInfoRecord> KEY_BROKER_BUY_STOCK_INFO_PRIMARY = Internal.createUniqueKey(BrokerBuyStockInfo.BROKER_BUY_STOCK_INFO, "KEY_broker_buy_stock_info_PRIMARY", BrokerBuyStockInfo.BROKER_BUY_STOCK_INFO.ID);
        public static final UniqueKey<BrokerBuySummaryRecord> KEY_BROKER_BUY_SUMMARY_PRIMARY = Internal.createUniqueKey(BrokerBuySummary.BROKER_BUY_SUMMARY, "KEY_broker_buy_summary_PRIMARY", BrokerBuySummary.BROKER_BUY_SUMMARY.ID);
        public static final UniqueKey<DragonTigerStockRecord> KEY_DRAGON_TIGER_STOCK_PRIMARY = Internal.createUniqueKey(DragonTigerStock.DRAGON_TIGER_STOCK, "KEY_dragon_tiger_stock_PRIMARY", DragonTigerStock.DRAGON_TIGER_STOCK.ID);
        public static final UniqueKey<DragonTigerStockRecord> KEY_DRAGON_TIGER_STOCK_UNIQUE_INDEX = Internal.createUniqueKey(DragonTigerStock.DRAGON_TIGER_STOCK, "KEY_dragon_tiger_stock_unique_index", DragonTigerStock.DRAGON_TIGER_STOCK.CODE, DragonTigerStock.DRAGON_TIGER_STOCK.TS_DATE, DragonTigerStock.DRAGON_TIGER_STOCK.BROKER, DragonTigerStock.DRAGON_TIGER_STOCK.REASON);
    }
}
